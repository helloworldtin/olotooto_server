"""fix user table

Revision ID: 9dee06e54968
Revises: 
Create Date: 2025-02-25 17:10:33.729233

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '9dee06e54968'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('posts',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('caption', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('tagpostlinks',
    sa.Column('tag_uid', sa.UUID(), nullable=False),
    sa.Column('post_uid', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('tag_uid', 'post_uid')
    )
    op.create_table('tags',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('tag_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('users',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gender', sa.Enum('male', 'female', 'other', name='genderenum'), nullable=False),
    sa.Column('profile_url', sa.String(), server_default='https://img.freepik.com/free-psd/contact-icon-illustration-isolated_23-2151903337.jpg?t=st=1740481711~exp=1740485311~hmac=de8146f0bcc8630a725995aeed260b912e5d81f35024e30d7980cd861c0a693b&w=1480', nullable=True),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('about', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_gender'), 'users', ['gender'], unique=False)
    op.create_table('comments',
    sa.Column('comment_uid', sa.UUID(), nullable=False),
    sa.Column('post_uid', sa.UUID(), nullable=True),
    sa.Column('commenter_uid', sa.Uuid(), nullable=False),
    sa.Column('comment', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('commented_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['post_uid'], ['posts.uid'], ),
    sa.PrimaryKeyConstraint('comment_uid')
    )
    op.create_table('likes',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('liker_uid', sa.Uuid(), nullable=False),
    sa.Column('post_uid', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['post_uid'], ['posts.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('shares',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('sharer_uid', sa.Uuid(), nullable=False),
    sa.Column('post_uid', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['post_uid'], ['posts.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('userlinks',
    sa.Column('follower_uid', sa.UUID(), nullable=False),
    sa.Column('user_uid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['follower_uid'], ['users.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('follower_uid', 'user_uid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userlinks')
    op.drop_table('shares')
    op.drop_table('likes')
    op.drop_table('comments')
    op.drop_index(op.f('ix_users_gender'), table_name='users')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('tagpostlinks')
    op.drop_table('posts')
    # ### end Alembic commands ###
